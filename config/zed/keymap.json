// Documentation: https://zed.dev/docs/key-bindings
// 
// Last shortcut defined takes priority in case of conflict.
// This is especially helpful for vim mode conflicts.
//TODO: See https://github.com/jellydn/zed-101-setup/blob/main/keymap.json
[
    // Vim mode resets
    {
        "context": "(VimControl && !menu) || vim_mode == insert",
        "bindings": {
            "ctrl-d": ["editor::SelectNext", { "replace_newest": false }],
            "ctrl-shift-d": [
                "editor::SelectPrevious",
                { "replace_newest": false }
            ],
            "ctrl-w": "pane::CloseActiveItem",
            "ctrl-alt-b": "workspace::ToggleRightDock",
            "ctrl-b": "workspace::ToggleLeftDock",
            "ctrl-a": "editor::SelectAll",
            "ctrl-i": null,
            "ctrl-shift-f": "pane::DeploySearch",
            "ctrl-shift-h": ["pane::DeploySearch", { "replace_enabled": true }]
        }
    },
    // Avoid vim override
    {
        "context": "BufferSearchBar",
        "bindings": {
            "escape": "buffer_search::Dismiss",
            "tab": "buffer_search::FocusEditor",
            "enter": "search::SelectNextMatch",
            "shift-enter": "search::SelectPrevMatch",
            "alt-enter": "search::SelectAllMatches",
            "ctrl-f": "search::FocusSearch",
            "ctrl-h": "search::ToggleReplace",
            "ctrl-l": "search::ToggleSelection"
        }
    },
    {
        "context": "Editor && mode == full",
        "bindings": {
            "alt-z": "editor::ToggleSoftWrap",
            "ctrl-f": "buffer_search::Deploy",
            "ctrl-h": ["buffer_search::Deploy", { "replace_enabled": true }],
            "ctrl-<": "editor::ToggleCodeActions",
            "ctrl-down": ["editor::MoveDownByLines", 10],
            "ctrl-up": ["editor::MoveUpByLines", 10]
        }
    },
    {
        "context": "vim_mode == insert",
        "bindings": {
            "ctrl-h": "editor::MoveLeft",
            "ctrl-j": "editor::MoveDown",
            "ctrl-k": "editor::MoveUp",
            "ctrl-l": "editor::MoveRight"
        }
    },
    {
        "context": "Picker || menu",
        "bindings": {
            "ctrl-h": "editor::MoveLeft",
            "ctrl-j": "menu::SelectNext",
            "ctrl-k": "menu::SelectPrev",
            "ctrl-l": "editor::MoveRight",
            "shift-g": "menu::SelectLast",
            "g g": "menu::SelectFirst"
        }
    },
    {
        "context": "Pane || Workspace",
        "bindings": {
            "ctrl-1": ["workspace::ActivatePane", 0],
            "ctrl-2": ["workspace::ActivatePane", 1],
            "ctrl-3": ["workspace::ActivatePane", 2],
            "ctrl-4": ["workspace::ActivatePane", 3],
            "ctrl-5": ["workspace::ActivatePane", 4],
            "ctrl-6": ["workspace::ActivatePane", 5],
            "ctrl-7": ["workspace::ActivatePane", 6],
            "ctrl-8": ["workspace::ActivatePane", 7],
            "ctrl-9": ["workspace::ActivatePane", 8],
            "ctrl-up": ["editor::MoveUpByLines", 10],
            "ctrl-down": ["editor::MoveDownByLines", 10]
        }
    },
    {
        "context": "Pane",
        "bindings": {
            "alt-left": "pane::GoBack",
            "alt-right": "pane::GoForward",
            "alt-h": "pane::GoBack",
            "alt-l": "pane::GoForward"
        }
    }
    // TODO: tab, visual mode tab, visual to insert mode with I and A
]
